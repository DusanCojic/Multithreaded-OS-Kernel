GAS LISTING /tmp/ccsK2KH6.s 			page 1


   1              		.file	"memory_allocator.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN15MemoryAllocator4initEv
   9              	_ZN15MemoryAllocator4initEv:
  10              	.LFB3:
  11              		.file 1 "src/memory_allocator.cpp"
   1:src/memory_allocator.cpp **** #include "../h/memory_allocator.hpp"
   2:src/memory_allocator.cpp **** #include "../lib/mem.h"
   3:src/memory_allocator.cpp **** 
   4:src/memory_allocator.cpp **** Block* MemoryAllocator::freeMemHead = nullptr;
   5:src/memory_allocator.cpp **** Block* MemoryAllocator::usedMemHead = nullptr;
   6:src/memory_allocator.cpp **** 
   7:src/memory_allocator.cpp **** void MemoryAllocator::init() {
  12              		.loc 1 7 30
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
   8:src/memory_allocator.cpp ****     freeMemHead = (Block*)((char*)HEAP_START_ADDR);
  20              		.loc 1 8 5
  21              		.loc 1 8 17 is_stmt 0
  22 000c 97070000 		la	a5,HEAP_START_ADDR
  22      83B70700 
  23 0014 83B60700 		ld	a3,0(a5)
  24 0018 17070000 		lla	a4,.LANCHOR0
  24      13070700 
  25 0020 2330D700 		sd	a3,0(a4)
   9:src/memory_allocator.cpp **** 
  10:src/memory_allocator.cpp ****     // At the start all memory is free
  11:src/memory_allocator.cpp ****     freeMemHead->size = ((char*)HEAP_END_ADDR - (char*)HEAP_START_ADDR)/ MEM_BLOCK_SIZE;
  26              		.loc 1 11 5 is_stmt 1
  27              		.loc 1 11 26 is_stmt 0
  28 0024 97070000 		la	a5,HEAP_END_ADDR
  28      83B70700 
  29 002c 83B70700 		ld	a5,0(a5)
  30              		.loc 1 11 47
  31 0030 B387D740 		sub	a5,a5,a3
  32              		.loc 1 11 72
  33 0034 93D76700 		srli	a5,a5,6
  34              		.loc 1 11 23
  35 0038 23B0F600 		sd	a5,0(a3)
  12:src/memory_allocator.cpp **** 
  13:src/memory_allocator.cpp ****     freeMemHead->next = nullptr;
  36              		.loc 1 13 5 is_stmt 1
  37              		.loc 1 13 18 is_stmt 0
  38 003c 83370700 		ld	a5,0(a4)
  39              		.loc 1 13 23
  40 0040 23B40700 		sd	zero,8(a5)
  14:src/memory_allocator.cpp ****     freeMemHead->prev = nullptr;
  41              		.loc 1 14 5 is_stmt 1
GAS LISTING /tmp/ccsK2KH6.s 			page 2


  42              		.loc 1 14 23 is_stmt 0
  43 0044 23B80700 		sd	zero,16(a5)
  15:src/memory_allocator.cpp **** 
  16:src/memory_allocator.cpp ****     // There is no used memory at the start
  17:src/memory_allocator.cpp ****     usedMemHead = nullptr;
  44              		.loc 1 17 5 is_stmt 1
  45              		.loc 1 17 17 is_stmt 0
  46 0048 23340700 		sd	zero,8(a4)
  18:src/memory_allocator.cpp **** }
  47              		.loc 1 18 1
  48 004c 03348100 		ld	s0,8(sp)
  49              		.cfi_restore 8
  50              		.cfi_def_cfa 2, 16
  51 0050 13010101 		addi	sp,sp,16
  52              		.cfi_def_cfa_offset 0
  53 0054 67800000 		jr	ra
  54              		.cfi_endproc
  55              	.LFE3:
  57              		.align	2
  58              		.globl	_ZN15MemoryAllocator9mem_allocEm
  60              	_ZN15MemoryAllocator9mem_allocEm:
  61              	.LFB4:
  19:src/memory_allocator.cpp **** 
  20:src/memory_allocator.cpp **** void* MemoryAllocator::mem_alloc(size_t size) {
  62              		.loc 1 20 47 is_stmt 1
  63              		.cfi_startproc
  64              	.LVL0:
  65 0058 130101FF 		addi	sp,sp,-16
  66              		.cfi_def_cfa_offset 16
  67 005c 23348100 		sd	s0,8(sp)
  68              		.cfi_offset 8, -8
  69 0060 13040101 		addi	s0,sp,16
  70              		.cfi_def_cfa 8, 0
  21:src/memory_allocator.cpp ****     if (size == 0)
  71              		.loc 1 21 5
  72 0064 63080512 		beqz	a0,.L20
  22:src/memory_allocator.cpp ****         return nullptr;
  23:src/memory_allocator.cpp **** 
  24:src/memory_allocator.cpp ****     // Given size in bytes converted to size in MEM_BLOCKS
  25:src/memory_allocator.cpp ****     size_t sizeInBlocks = (size + sizeof(Block)) % MEM_BLOCK_SIZE ? (size + sizeof(Block)) / MEM_BL
  73              		.loc 1 25 5
  74              		.loc 1 25 33 is_stmt 0
  75 0068 13058501 		addi	a0,a0,24
  76              	.LVL1:
  77              		.loc 1 25 50
  78 006c 9377F503 		andi	a5,a0,63
  79              		.loc 1 25 67
  80 0070 63840702 		beqz	a5,.L5
  81              		.loc 1 25 92 discriminator 1
  82 0074 93576500 		srli	a5,a0,6
  83              		.loc 1 25 67 discriminator 1
  84 0078 93871700 		addi	a5,a5,1
  85              	.L6:
  86              	.LVL2:
  26:src/memory_allocator.cpp **** 
  27:src/memory_allocator.cpp ****     // Find free fragment with required size using best fit algorithm
  28:src/memory_allocator.cpp ****     Block* freeBlock = nullptr;
GAS LISTING /tmp/ccsK2KH6.s 			page 3


  87              		.loc 1 28 5 is_stmt 1 discriminator 4
  29:src/memory_allocator.cpp ****     for (Block* current = freeMemHead; current != nullptr; current = current->next) {
  88              		.loc 1 29 5 discriminator 4
  89              	.LBB2:
  90              		.loc 1 29 17 is_stmt 0 discriminator 4
  91 007c 17050000 		ld	a0,.LANCHOR0
  91      03350500 
  92              	.LVL3:
  93              	.L8:
  94              		.loc 1 29 48 is_stmt 1 discriminator 1
  95 0084 630E0500 		beqz	a0,.L7
  30:src/memory_allocator.cpp ****         if (current->size >= sizeInBlocks) {
  96              		.loc 1 30 9
  97              		.loc 1 30 22 is_stmt 0
  98 0088 03370500 		ld	a4,0(a0)
  99              		.loc 1 30 9
 100 008c 637AF700 		bgeu	a4,a5,.L7
  29:src/memory_allocator.cpp ****     for (Block* current = freeMemHead; current != nullptr; current = current->next) {
 101              		.loc 1 29 5 is_stmt 1 discriminator 2
  29:src/memory_allocator.cpp ****     for (Block* current = freeMemHead; current != nullptr; current = current->next) {
 102              		.loc 1 29 68 is_stmt 0 discriminator 2
 103 0090 03358500 		ld	a0,8(a0)
 104              	.LVL4:
  29:src/memory_allocator.cpp ****     for (Block* current = freeMemHead; current != nullptr; current = current->next) {
 105              		.loc 1 29 5 discriminator 2
 106 0094 6FF01FFF 		j	.L8
 107              	.LVL5:
 108              	.L5:
 109              	.LBE2:
  25:src/memory_allocator.cpp **** 
 110              		.loc 1 25 67 discriminator 2
 111 0098 93576500 		srli	a5,a0,6
 112 009c 6FF01FFE 		j	.L6
 113              	.LVL6:
 114              	.L7:
  31:src/memory_allocator.cpp ****             freeBlock = current;
  32:src/memory_allocator.cpp ****             break;
  33:src/memory_allocator.cpp ****         }
  34:src/memory_allocator.cpp ****     }
  35:src/memory_allocator.cpp **** 
  36:src/memory_allocator.cpp ****     // Didn't find large enough fragment
  37:src/memory_allocator.cpp ****     if (!freeBlock)
 115              		.loc 1 37 5 is_stmt 1
 116 00a0 63080506 		beqz	a0,.L3
  38:src/memory_allocator.cpp ****         return nullptr;
  39:src/memory_allocator.cpp **** 
  40:src/memory_allocator.cpp ****     // Allocate new fragment of memory
  41:src/memory_allocator.cpp ****     Block* allocated = freeBlock;
 117              		.loc 1 41 5
 118              	.LVL7:
  42:src/memory_allocator.cpp ****     if (freeBlock->size > sizeInBlocks) {
 119              		.loc 1 42 5
 120              	.LBB3:
 121              		.loc 1 42 20 is_stmt 0
 122 00a4 83360500 		ld	a3,0(a0)
 123              		.loc 1 42 5
 124 00a8 63F0D708 		bleu	a3,a5,.L9
GAS LISTING /tmp/ccsK2KH6.s 			page 4


 125              	.LBB4:
  43:src/memory_allocator.cpp ****         // Creating a new free fragment
  44:src/memory_allocator.cpp ****         Block* newFreeBlock = (Block*)((char*)freeBlock + sizeInBlocks * MEM_BLOCK_SIZE);
 126              		.loc 1 44 9 is_stmt 1
 127              		.loc 1 44 72 is_stmt 0
 128 00ac 13976700 		slli	a4,a5,6
 129              		.loc 1 44 16
 130 00b0 3307E500 		add	a4,a0,a4
 131              	.LVL8:
  45:src/memory_allocator.cpp **** 
  46:src/memory_allocator.cpp ****         newFreeBlock->size = freeBlock->size - sizeInBlocks;
 132              		.loc 1 46 9 is_stmt 1
 133              		.loc 1 46 46 is_stmt 0
 134 00b4 B386F640 		sub	a3,a3,a5
 135              		.loc 1 46 28
 136 00b8 2330D700 		sd	a3,0(a4)
  47:src/memory_allocator.cpp ****         newFreeBlock->next = freeBlock->next;
 137              		.loc 1 47 9 is_stmt 1
 138              		.loc 1 47 41 is_stmt 0
 139 00bc 83368500 		ld	a3,8(a0)
 140              		.loc 1 47 28
 141 00c0 2334D700 		sd	a3,8(a4)
  48:src/memory_allocator.cpp ****         newFreeBlock->prev = freeBlock->prev;
 142              		.loc 1 48 9 is_stmt 1
 143              		.loc 1 48 41 is_stmt 0
 144 00c4 83360501 		ld	a3,16(a0)
 145              		.loc 1 48 28
 146 00c8 2338D700 		sd	a3,16(a4)
  49:src/memory_allocator.cpp **** 
  50:src/memory_allocator.cpp ****         // Update the free fragments list
  51:src/memory_allocator.cpp ****         if (newFreeBlock->prev)
 147              		.loc 1 51 9 is_stmt 1
 148 00cc 63880604 		beqz	a3,.L10
  52:src/memory_allocator.cpp ****             newFreeBlock->prev->next = newFreeBlock;
 149              		.loc 1 52 13
 150              		.loc 1 52 38 is_stmt 0
 151 00d0 23B4E600 		sd	a4,8(a3)
 152              	.L11:
  53:src/memory_allocator.cpp ****         else
  54:src/memory_allocator.cpp ****             freeMemHead = newFreeBlock;
  55:src/memory_allocator.cpp **** 
  56:src/memory_allocator.cpp ****         if (newFreeBlock->next)
 153              		.loc 1 56 9 is_stmt 1
 154              		.loc 1 56 27 is_stmt 0
 155 00d4 83368700 		ld	a3,8(a4)
 156              		.loc 1 56 9
 157 00d8 63840600 		beqz	a3,.L12
  57:src/memory_allocator.cpp ****             newFreeBlock->next->prev = newFreeBlock;
 158              		.loc 1 57 13 is_stmt 1
 159              		.loc 1 57 38 is_stmt 0
 160 00dc 23B8E600 		sd	a4,16(a3)
 161              	.LVL9:
 162              	.L12:
 163              	.LBE4:
 164              	.LBE3:
  58:src/memory_allocator.cpp ****     }
  59:src/memory_allocator.cpp ****     else {
GAS LISTING /tmp/ccsK2KH6.s 			page 5


  60:src/memory_allocator.cpp ****         if (freeBlock->prev)
  61:src/memory_allocator.cpp ****             freeBlock->prev->next = freeBlock->next;
  62:src/memory_allocator.cpp ****         else
  63:src/memory_allocator.cpp ****             freeMemHead = freeBlock->next;
  64:src/memory_allocator.cpp **** 
  65:src/memory_allocator.cpp ****         if (freeBlock->next)
  66:src/memory_allocator.cpp ****             freeBlock->next->prev = freeBlock->prev;
  67:src/memory_allocator.cpp ****     }
  68:src/memory_allocator.cpp **** 
  69:src/memory_allocator.cpp ****     // Update used fragments list
  70:src/memory_allocator.cpp ****     allocated->size = sizeInBlocks;
 165              		.loc 1 70 5 is_stmt 1
 166              		.loc 1 70 21 is_stmt 0
 167 00e0 2330F500 		sd	a5,0(a0)
  71:src/memory_allocator.cpp ****     allocated->next = nullptr;
 168              		.loc 1 71 5 is_stmt 1
 169              		.loc 1 71 21 is_stmt 0
 170 00e4 23340500 		sd	zero,8(a0)
  72:src/memory_allocator.cpp ****     allocated->prev = nullptr;
 171              		.loc 1 72 5 is_stmt 1
 172              		.loc 1 72 21 is_stmt 0
 173 00e8 23380500 		sd	zero,16(a0)
  73:src/memory_allocator.cpp **** 
  74:src/memory_allocator.cpp ****     // Insert new used fragment in ascending order by addresses
  75:src/memory_allocator.cpp ****     if (!usedMemHead)
 174              		.loc 1 75 5 is_stmt 1
 175              	.LBB6:
 176              		.loc 1 75 9 is_stmt 0
 177 00ec 97070000 		ld	a5,.LANCHOR0+8
 177      83B70700 
 178              	.LVL10:
 179              		.loc 1 75 5
 180 00f4 63840706 		beqz	a5,.L22
 181              	.LBE6:
  76:src/memory_allocator.cpp ****         usedMemHead = allocated;
  77:src/memory_allocator.cpp ****     else if ((char*)allocated < (char*)usedMemHead) {
 182              		.loc 1 77 10 is_stmt 1
 183              	.LBB10:
 184              	.LBB7:
 185 00f8 6378F506 		bleu	a5,a0,.L17
  78:src/memory_allocator.cpp ****         // Before current head of the list
  79:src/memory_allocator.cpp ****         usedMemHead->prev = allocated;
 186              		.loc 1 79 9
 187              		.loc 1 79 27 is_stmt 0
 188 00fc 23B8A700 		sd	a0,16(a5)
 189              	.LVL11:
  80:src/memory_allocator.cpp ****         allocated->next = usedMemHead;
 190              		.loc 1 80 9 is_stmt 1
 191              		.loc 1 80 25 is_stmt 0
 192 0100 2334F500 		sd	a5,8(a0)
  81:src/memory_allocator.cpp ****         usedMemHead = allocated;
 193              		.loc 1 81 9 is_stmt 1
 194              		.loc 1 81 21 is_stmt 0
 195 0104 97070000 		sd	a0,.LANCHOR0+8,a5
 195      23B0A700 
 196              	.L16:
 197              	.LBE7:
GAS LISTING /tmp/ccsK2KH6.s 			page 6


 198              	.LBE10:
  82:src/memory_allocator.cpp ****     }
  83:src/memory_allocator.cpp ****     else {
  84:src/memory_allocator.cpp ****         // Find its position
  85:src/memory_allocator.cpp ****         Block* temp = usedMemHead;
  86:src/memory_allocator.cpp ****         while (temp->next) {
  87:src/memory_allocator.cpp ****             if ((char*)allocated < (char*)temp->next)
  88:src/memory_allocator.cpp ****                 break;
  89:src/memory_allocator.cpp ****             temp = temp->next;
  90:src/memory_allocator.cpp ****         }
  91:src/memory_allocator.cpp **** 
  92:src/memory_allocator.cpp ****         // Insert it in founded position
  93:src/memory_allocator.cpp ****         allocated->next = temp->next;
  94:src/memory_allocator.cpp ****         allocated->prev = temp;
  95:src/memory_allocator.cpp ****         if (temp->next)
  96:src/memory_allocator.cpp ****             temp->next->prev = allocated;
  97:src/memory_allocator.cpp ****         temp->next = allocated;
  98:src/memory_allocator.cpp ****     }
  99:src/memory_allocator.cpp **** 
 100:src/memory_allocator.cpp ****     // Return address which is after the Block struct
 101:src/memory_allocator.cpp ****     return (void*)((char*)allocated + sizeof(Block));
 199              		.loc 1 101 5 is_stmt 1
 200              		.loc 1 101 52 is_stmt 0
 201 010c 13058501 		addi	a0,a0,24
 202              	.LVL12:
 203              	.L3:
 102:src/memory_allocator.cpp **** }
 204              		.loc 1 102 1
 205 0110 03348100 		ld	s0,8(sp)
 206              		.cfi_remember_state
 207              		.cfi_restore 8
 208              		.cfi_def_cfa 2, 16
 209 0114 13010101 		addi	sp,sp,16
 210              		.cfi_def_cfa_offset 0
 211 0118 67800000 		jr	ra
 212              	.LVL13:
 213              	.L10:
 214              		.cfi_restore_state
 215              	.LBB11:
 216              	.LBB5:
  54:src/memory_allocator.cpp **** 
 217              		.loc 1 54 13 is_stmt 1
  54:src/memory_allocator.cpp **** 
 218              		.loc 1 54 25 is_stmt 0
 219 011c 97060000 		sd	a4,.LANCHOR0,a3
 219      23B0E600 
 220 0124 6FF01FFB 		j	.L11
 221              	.LVL14:
 222              	.L9:
 223              	.LBE5:
  60:src/memory_allocator.cpp ****             freeBlock->prev->next = freeBlock->next;
 224              		.loc 1 60 9 is_stmt 1
  60:src/memory_allocator.cpp ****             freeBlock->prev->next = freeBlock->next;
 225              		.loc 1 60 24 is_stmt 0
 226 0128 03370501 		ld	a4,16(a0)
  60:src/memory_allocator.cpp ****             freeBlock->prev->next = freeBlock->next;
 227              		.loc 1 60 9
GAS LISTING /tmp/ccsK2KH6.s 			page 7


 228 012c 63000702 		beqz	a4,.L13
  61:src/memory_allocator.cpp ****         else
 229              		.loc 1 61 13 is_stmt 1
  61:src/memory_allocator.cpp ****         else
 230              		.loc 1 61 48 is_stmt 0
 231 0130 83368500 		ld	a3,8(a0)
  61:src/memory_allocator.cpp ****         else
 232              		.loc 1 61 35
 233 0134 2334D700 		sd	a3,8(a4)
 234              	.L14:
  65:src/memory_allocator.cpp ****             freeBlock->next->prev = freeBlock->prev;
 235              		.loc 1 65 9 is_stmt 1
  65:src/memory_allocator.cpp ****             freeBlock->next->prev = freeBlock->prev;
 236              		.loc 1 65 24 is_stmt 0
 237 0138 03378500 		ld	a4,8(a0)
  65:src/memory_allocator.cpp ****             freeBlock->next->prev = freeBlock->prev;
 238              		.loc 1 65 9
 239 013c E30207FA 		beqz	a4,.L12
  66:src/memory_allocator.cpp ****     }
 240              		.loc 1 66 13 is_stmt 1
  66:src/memory_allocator.cpp ****     }
 241              		.loc 1 66 48 is_stmt 0
 242 0140 83360501 		ld	a3,16(a0)
  66:src/memory_allocator.cpp ****     }
 243              		.loc 1 66 35
 244 0144 2338D700 		sd	a3,16(a4)
 245 0148 6FF09FF9 		j	.L12
 246              	.L13:
  63:src/memory_allocator.cpp **** 
 247              		.loc 1 63 13 is_stmt 1
  63:src/memory_allocator.cpp **** 
 248              		.loc 1 63 38 is_stmt 0
 249 014c 03378500 		ld	a4,8(a0)
  63:src/memory_allocator.cpp **** 
 250              		.loc 1 63 25
 251 0150 97060000 		sd	a4,.LANCHOR0,a3
 251      23B0E600 
 252 0158 6FF01FFE 		j	.L14
 253              	.LVL15:
 254              	.L22:
 255              	.LBE11:
 256              	.LBB12:
  76:src/memory_allocator.cpp ****     else if ((char*)allocated < (char*)usedMemHead) {
 257              		.loc 1 76 9 is_stmt 1
  76:src/memory_allocator.cpp ****     else if ((char*)allocated < (char*)usedMemHead) {
 258              		.loc 1 76 21 is_stmt 0
 259 015c 97070000 		sd	a0,.LANCHOR0+8,a5
 259      23B0A700 
 260              	.LVL16:
 261 0164 6FF09FFA 		j	.L16
 262              	.LVL17:
 263              	.L17:
 264              	.LBB9:
 265              	.LBB8:
  86:src/memory_allocator.cpp ****             if ((char*)allocated < (char*)temp->next)
 266              		.loc 1 86 9 is_stmt 1
  86:src/memory_allocator.cpp ****             if ((char*)allocated < (char*)temp->next)
GAS LISTING /tmp/ccsK2KH6.s 			page 8


 267              		.loc 1 86 22
 268 0168 13870700 		mv	a4,a5
 269 016c 83B78700 		ld	a5,8(a5)
 270              	.LVL18:
 271 0170 63840700 		beqz	a5,.L18
  87:src/memory_allocator.cpp ****                 break;
 272              		.loc 1 87 13
 273 0174 E37AF5FE 		bleu	a5,a0,.L17
 274              	.L18:
  93:src/memory_allocator.cpp ****         allocated->prev = temp;
 275              		.loc 1 93 9
  93:src/memory_allocator.cpp ****         allocated->prev = temp;
 276              		.loc 1 93 25 is_stmt 0
 277 0178 2334F500 		sd	a5,8(a0)
  94:src/memory_allocator.cpp ****         if (temp->next)
 278              		.loc 1 94 9 is_stmt 1
  94:src/memory_allocator.cpp ****         if (temp->next)
 279              		.loc 1 94 25 is_stmt 0
 280 017c 2338E500 		sd	a4,16(a0)
  95:src/memory_allocator.cpp ****             temp->next->prev = allocated;
 281              		.loc 1 95 9 is_stmt 1
  95:src/memory_allocator.cpp ****             temp->next->prev = allocated;
 282              		.loc 1 95 19 is_stmt 0
 283 0180 83378700 		ld	a5,8(a4)
  95:src/memory_allocator.cpp ****             temp->next->prev = allocated;
 284              		.loc 1 95 9
 285 0184 63840700 		beqz	a5,.L19
  96:src/memory_allocator.cpp ****         temp->next = allocated;
 286              		.loc 1 96 13 is_stmt 1
  96:src/memory_allocator.cpp ****         temp->next = allocated;
 287              		.loc 1 96 30 is_stmt 0
 288 0188 23B8A700 		sd	a0,16(a5)
 289              	.LVL19:
 290              	.L19:
  97:src/memory_allocator.cpp ****     }
 291              		.loc 1 97 9 is_stmt 1
  97:src/memory_allocator.cpp ****     }
 292              		.loc 1 97 20 is_stmt 0
 293 018c 2334A700 		sd	a0,8(a4)
 294 0190 6FF0DFF7 		j	.L16
 295              	.LVL20:
 296              	.L20:
 297              	.LBE8:
 298              	.LBE9:
 299              	.LBE12:
  22:src/memory_allocator.cpp **** 
 300              		.loc 1 22 16
 301 0194 13050000 		li	a0,0
 302              	.LVL21:
 303 0198 6FF09FF7 		j	.L3
 304              		.cfi_endproc
 305              	.LFE4:
 307              		.align	2
 308              		.globl	_ZN15MemoryAllocator9tryToJoinEP5Block
 310              	_ZN15MemoryAllocator9tryToJoinEP5Block:
 311              	.LFB6:
 103:src/memory_allocator.cpp **** 
GAS LISTING /tmp/ccsK2KH6.s 			page 9


 104:src/memory_allocator.cpp **** int MemoryAllocator::mem_free(void *ptr) {
 105:src/memory_allocator.cpp ****     // There is no used fragment
 106:src/memory_allocator.cpp ****     if (!usedMemHead) return -1;
 107:src/memory_allocator.cpp ****     // Trying to free null pointer
 108:src/memory_allocator.cpp ****     if (!ptr) return -2;
 109:src/memory_allocator.cpp ****     // ptr address out of heap bounds
 110:src/memory_allocator.cpp ****     if ((char*)ptr < (char*)HEAP_START_ADDR || (char*)ptr > (char*)HEAP_END_ADDR)
 111:src/memory_allocator.cpp ****         return -3;
 112:src/memory_allocator.cpp ****     // Trying to free fragment that is before first element of used fragments list
 113:src/memory_allocator.cpp ****     if ((char*)ptr < (char*)usedMemHead)
 114:src/memory_allocator.cpp ****         return -4;
 115:src/memory_allocator.cpp **** 
 116:src/memory_allocator.cpp ****     // Get the start of a used fragments list element
 117:src/memory_allocator.cpp ****     Block* current = (Block*)((char*)ptr - sizeof(Block));
 118:src/memory_allocator.cpp ****     // Find it in used fragments list
 119:src/memory_allocator.cpp ****     if ((char*)current == (char*)usedMemHead) {
 120:src/memory_allocator.cpp ****         usedMemHead = usedMemHead->next;
 121:src/memory_allocator.cpp ****         if (usedMemHead) usedMemHead->prev = nullptr;
 122:src/memory_allocator.cpp ****     }
 123:src/memory_allocator.cpp ****     else {
 124:src/memory_allocator.cpp ****         current->prev->next = current->next;
 125:src/memory_allocator.cpp ****         if (current->next)
 126:src/memory_allocator.cpp ****             current->next->prev = current->prev;
 127:src/memory_allocator.cpp ****     }
 128:src/memory_allocator.cpp **** 
 129:src/memory_allocator.cpp ****     // Insert new free fragment into a free fragments list
 130:src/memory_allocator.cpp ****     current->next = nullptr;
 131:src/memory_allocator.cpp ****     current->prev = nullptr;
 132:src/memory_allocator.cpp **** 
 133:src/memory_allocator.cpp ****     if (!freeMemHead)
 134:src/memory_allocator.cpp ****         freeMemHead = current;
 135:src/memory_allocator.cpp ****     else if ((char*)current < (char*)freeMemHead) {
 136:src/memory_allocator.cpp ****         current->next = freeMemHead;
 137:src/memory_allocator.cpp ****         freeMemHead->prev = current;
 138:src/memory_allocator.cpp ****         freeMemHead = current;
 139:src/memory_allocator.cpp ****         tryToJoin(freeMemHead);
 140:src/memory_allocator.cpp ****     }
 141:src/memory_allocator.cpp ****     else {
 142:src/memory_allocator.cpp ****         // Find the position
 143:src/memory_allocator.cpp ****         Block* temp = freeMemHead;
 144:src/memory_allocator.cpp ****         while (temp->next) {
 145:src/memory_allocator.cpp ****             if ((char*)current < (char*)temp)
 146:src/memory_allocator.cpp ****                 break;
 147:src/memory_allocator.cpp **** 
 148:src/memory_allocator.cpp ****             temp = temp->next;
 149:src/memory_allocator.cpp ****         }
 150:src/memory_allocator.cpp **** 
 151:src/memory_allocator.cpp ****         // Insert it at founded position
 152:src/memory_allocator.cpp ****         current->prev = temp;
 153:src/memory_allocator.cpp ****         current->next = temp->next;
 154:src/memory_allocator.cpp ****         if (temp->next)
 155:src/memory_allocator.cpp ****             temp->next->prev = current;
 156:src/memory_allocator.cpp ****         temp->next = current;
 157:src/memory_allocator.cpp **** 
 158:src/memory_allocator.cpp ****         tryToJoin(current);
 159:src/memory_allocator.cpp ****         tryToJoin(temp);
 160:src/memory_allocator.cpp ****     }
GAS LISTING /tmp/ccsK2KH6.s 			page 10


 161:src/memory_allocator.cpp **** 
 162:src/memory_allocator.cpp ****     return 0;
 163:src/memory_allocator.cpp **** }
 164:src/memory_allocator.cpp **** 
 165:src/memory_allocator.cpp **** void MemoryAllocator::tryToJoin(Block *block) {
 312              		.loc 1 165 47 is_stmt 1
 313              		.cfi_startproc
 314              	.LVL22:
 315 019c 130101FF 		addi	sp,sp,-16
 316              		.cfi_def_cfa_offset 16
 317 01a0 23348100 		sd	s0,8(sp)
 318              		.cfi_offset 8, -8
 319 01a4 13040101 		addi	s0,sp,16
 320              		.cfi_def_cfa 8, 0
 166:src/memory_allocator.cpp ****     if (block->next) {
 321              		.loc 1 166 5
 322              		.loc 1 166 16 is_stmt 0
 323 01a8 03378500 		ld	a4,8(a0)
 324              		.loc 1 166 5
 325 01ac 630C0700 		beqz	a4,.L23
 167:src/memory_allocator.cpp ****         if (((char*)block + block->size * MEM_BLOCK_SIZE + sizeof(Block)) == (char*)block->next) {
 326              		.loc 1 167 9 is_stmt 1
 327              		.loc 1 167 36 is_stmt 0
 328 01b0 83360500 		ld	a3,0(a0)
 329              		.loc 1 167 41
 330 01b4 93976600 		slli	a5,a3,6
 331              		.loc 1 167 58
 332 01b8 93878701 		addi	a5,a5,24
 333 01bc B307F500 		add	a5,a0,a5
 334              		.loc 1 167 9
 335 01c0 6308F700 		beq	a4,a5,.L26
 336              	.L23:
 168:src/memory_allocator.cpp ****             block->size += block->next->size + sizeof(Block);
 169:src/memory_allocator.cpp ****             block->next = block->next->next;
 170:src/memory_allocator.cpp ****             if (block->next)
 171:src/memory_allocator.cpp ****                 block->next->prev = block;
 172:src/memory_allocator.cpp ****         }
 173:src/memory_allocator.cpp ****     }
 174:src/memory_allocator.cpp **** }...
 337              		.loc 1 174 1
 338 01c4 03348100 		ld	s0,8(sp)
 339              		.cfi_remember_state
 340              		.cfi_restore 8
 341              		.cfi_def_cfa 2, 16
 342 01c8 13010101 		addi	sp,sp,16
 343              		.cfi_def_cfa_offset 0
 344 01cc 67800000 		jr	ra
 345              	.L26:
 346              		.cfi_restore_state
 168:src/memory_allocator.cpp ****             block->size += block->next->size + sizeof(Block);
 347              		.loc 1 168 13 is_stmt 1
 168:src/memory_allocator.cpp ****             block->size += block->next->size + sizeof(Block);
 348              		.loc 1 168 41 is_stmt 0
 349 01d0 83370700 		ld	a5,0(a4)
 168:src/memory_allocator.cpp ****             block->size += block->next->size + sizeof(Block);
 350              		.loc 1 168 25
 351 01d4 B386F600 		add	a3,a3,a5
GAS LISTING /tmp/ccsK2KH6.s 			page 11


 352 01d8 93868601 		addi	a3,a3,24
 353 01dc 2330D500 		sd	a3,0(a0)
 169:src/memory_allocator.cpp ****             block->next = block->next->next;
 354              		.loc 1 169 13 is_stmt 1
 169:src/memory_allocator.cpp ****             block->next = block->next->next;
 355              		.loc 1 169 40 is_stmt 0
 356 01e0 83378700 		ld	a5,8(a4)
 169:src/memory_allocator.cpp ****             block->next = block->next->next;
 357              		.loc 1 169 25
 358 01e4 2334F500 		sd	a5,8(a0)
 170:src/memory_allocator.cpp ****             if (block->next)
 359              		.loc 1 170 13 is_stmt 1
 360 01e8 E38E07FC 		beqz	a5,.L23
 171:src/memory_allocator.cpp ****                 block->next->prev = block;
 361              		.loc 1 171 17
 171:src/memory_allocator.cpp ****                 block->next->prev = block;
 362              		.loc 1 171 35 is_stmt 0
 363 01ec 23B8A700 		sd	a0,16(a5)
 364              		.loc 1 174 1
 365 01f0 6FF05FFD 		j	.L23
 366              		.cfi_endproc
 367              	.LFE6:
 369              		.align	2
 370              		.globl	_ZN15MemoryAllocator8mem_freeEPv
 372              	_ZN15MemoryAllocator8mem_freeEPv:
 373              	.LFB5:
 104:src/memory_allocator.cpp **** int MemoryAllocator::mem_free(void *ptr) {
 374              		.loc 1 104 42 is_stmt 1
 375              		.cfi_startproc
 376              	.LVL23:
 106:src/memory_allocator.cpp ****     if (!usedMemHead) return -1;
 377              		.loc 1 106 5
 106:src/memory_allocator.cpp ****     if (!usedMemHead) return -1;
 378              		.loc 1 106 9 is_stmt 0
 379 01f4 97070000 		ld	a5,.LANCHOR0+8
 379      83B70700 
 106:src/memory_allocator.cpp ****     if (!usedMemHead) return -1;
 380              		.loc 1 106 5
 381 01fc 638C0710 		beqz	a5,.L35
 382 0200 13070500 		mv	a4,a0
 108:src/memory_allocator.cpp ****     if (!ptr) return -2;
 383              		.loc 1 108 5 is_stmt 1
 384 0204 630C0510 		beqz	a0,.L36
 110:src/memory_allocator.cpp ****     if ((char*)ptr < (char*)HEAP_START_ADDR || (char*)ptr > (char*)HEAP_END_ADDR)
 385              		.loc 1 110 5
 110:src/memory_allocator.cpp ****     if ((char*)ptr < (char*)HEAP_START_ADDR || (char*)ptr > (char*)HEAP_END_ADDR)
 386              		.loc 1 110 22 is_stmt 0
 387 0208 97060000 		la	a3,HEAP_START_ADDR
 387      83B60600 
 388 0210 83B60600 		ld	a3,0(a3)
 110:src/memory_allocator.cpp ****     if ((char*)ptr < (char*)HEAP_START_ADDR || (char*)ptr > (char*)HEAP_END_ADDR)
 389              		.loc 1 110 5
 390 0214 6368D510 		bgtu	a3,a0,.L37
 110:src/memory_allocator.cpp ****     if ((char*)ptr < (char*)HEAP_START_ADDR || (char*)ptr > (char*)HEAP_END_ADDR)
 391              		.loc 1 110 61 discriminator 1
 392 0218 97060000 		la	a3,HEAP_END_ADDR
 392      83B60600 
GAS LISTING /tmp/ccsK2KH6.s 			page 12


 393 0220 83B60600 		ld	a3,0(a3)
 110:src/memory_allocator.cpp ****     if ((char*)ptr < (char*)HEAP_START_ADDR || (char*)ptr > (char*)HEAP_END_ADDR)
 394              		.loc 1 110 45 discriminator 1
 395 0224 63E4A610 		bltu	a3,a0,.L38
 113:src/memory_allocator.cpp ****     if ((char*)ptr < (char*)usedMemHead)
 396              		.loc 1 113 5 is_stmt 1
 397 0228 6366F510 		bgtu	a5,a0,.L39
 117:src/memory_allocator.cpp ****     Block* current = (Block*)((char*)ptr - sizeof(Block));
 398              		.loc 1 117 5
 117:src/memory_allocator.cpp ****     Block* current = (Block*)((char*)ptr - sizeof(Block));
 399              		.loc 1 117 12 is_stmt 0
 400 022c 130585FE 		addi	a0,a0,-24
 401              	.LVL24:
 119:src/memory_allocator.cpp ****     if ((char*)current == (char*)usedMemHead) {
 402              		.loc 1 119 5 is_stmt 1
 403 0230 638EA708 		beq	a5,a0,.L43
 124:src/memory_allocator.cpp ****         current->prev->next = current->next;
 404              		.loc 1 124 9
 124:src/memory_allocator.cpp ****         current->prev->next = current->next;
 405              		.loc 1 124 18 is_stmt 0
 406 0234 833687FF 		ld	a3,-8(a4)
 124:src/memory_allocator.cpp ****         current->prev->next = current->next;
 407              		.loc 1 124 40
 408 0238 833707FF 		ld	a5,-16(a4)
 124:src/memory_allocator.cpp ****         current->prev->next = current->next;
 409              		.loc 1 124 29
 410 023c 23B4F600 		sd	a5,8(a3)
 125:src/memory_allocator.cpp ****         if (current->next)
 411              		.loc 1 125 9 is_stmt 1
 412 0240 63860700 		beqz	a5,.L30
 126:src/memory_allocator.cpp ****             current->next->prev = current->prev;
 413              		.loc 1 126 13
 126:src/memory_allocator.cpp ****             current->next->prev = current->prev;
 414              		.loc 1 126 44 is_stmt 0
 415 0244 833687FF 		ld	a3,-8(a4)
 126:src/memory_allocator.cpp ****             current->next->prev = current->prev;
 416              		.loc 1 126 33
 417 0248 23B8D700 		sd	a3,16(a5)
 418              	.L30:
 130:src/memory_allocator.cpp ****     current->next = nullptr;
 419              		.loc 1 130 5 is_stmt 1
 130:src/memory_allocator.cpp ****     current->next = nullptr;
 420              		.loc 1 130 19 is_stmt 0
 421 024c 233807FE 		sd	zero,-16(a4)
 131:src/memory_allocator.cpp ****     current->prev = nullptr;
 422              		.loc 1 131 5 is_stmt 1
 131:src/memory_allocator.cpp ****     current->prev = nullptr;
 423              		.loc 1 131 19 is_stmt 0
 424 0250 233C07FE 		sd	zero,-8(a4)
 133:src/memory_allocator.cpp ****     if (!freeMemHead)
 425              		.loc 1 133 5 is_stmt 1
 426              	.LBB13:
 133:src/memory_allocator.cpp ****     if (!freeMemHead)
 427              		.loc 1 133 9 is_stmt 0
 428 0254 97070000 		ld	a5,.LANCHOR0
 428      83B70700 
 133:src/memory_allocator.cpp ****     if (!freeMemHead)
GAS LISTING /tmp/ccsK2KH6.s 			page 13


 429              		.loc 1 133 5
 430 025c 63840708 		beqz	a5,.L44
 431              	.LBE13:
 104:src/memory_allocator.cpp **** int MemoryAllocator::mem_free(void *ptr) {
 432              		.loc 1 104 42
 433 0260 130101FE 		addi	sp,sp,-32
 434              		.cfi_def_cfa_offset 32
 435 0264 233C1100 		sd	ra,24(sp)
 436 0268 23388100 		sd	s0,16(sp)
 437 026c 23349100 		sd	s1,8(sp)
 438              		.cfi_offset 1, -8
 439              		.cfi_offset 8, -16
 440              		.cfi_offset 9, -24
 441 0270 13040102 		addi	s0,sp,32
 442              		.cfi_def_cfa 8, 0
 135:src/memory_allocator.cpp ****     else if ((char*)current < (char*)freeMemHead) {
 443              		.loc 1 135 10 is_stmt 1
 444              	.LBB18:
 445              	.LBB14:
 446 0274 6360F508 		bgtu	a5,a0,.L45
 447              	.L32:
 448              	.LVL25:
 449              	.LBB15:
 144:src/memory_allocator.cpp ****         while (temp->next) {
 450              		.loc 1 144 9
 144:src/memory_allocator.cpp ****         while (temp->next) {
 451              		.loc 1 144 22
 452 0278 93840700 		mv	s1,a5
 453 027c 83B78700 		ld	a5,8(a5)
 454              	.LVL26:
 455 0280 63840700 		beqz	a5,.L33
 145:src/memory_allocator.cpp ****             if ((char*)current < (char*)temp)
 456              		.loc 1 145 13
 457 0284 E37A95FE 		bleu	s1,a0,.L32
 458              	.L33:
 152:src/memory_allocator.cpp ****         current->prev = temp;
 459              		.loc 1 152 9
 152:src/memory_allocator.cpp ****         current->prev = temp;
 460              		.loc 1 152 23 is_stmt 0
 461 0288 233C97FE 		sd	s1,-8(a4)
 153:src/memory_allocator.cpp ****         current->next = temp->next;
 462              		.loc 1 153 9 is_stmt 1
 153:src/memory_allocator.cpp ****         current->next = temp->next;
 463              		.loc 1 153 31 is_stmt 0
 464 028c 83B78400 		ld	a5,8(s1)
 153:src/memory_allocator.cpp ****         current->next = temp->next;
 465              		.loc 1 153 23
 466 0290 2338F7FE 		sd	a5,-16(a4)
 154:src/memory_allocator.cpp ****         if (temp->next)
 467              		.loc 1 154 9 is_stmt 1
 468 0294 63840700 		beqz	a5,.L34
 155:src/memory_allocator.cpp ****             temp->next->prev = current;
 469              		.loc 1 155 13
 155:src/memory_allocator.cpp ****             temp->next->prev = current;
 470              		.loc 1 155 30 is_stmt 0
 471 0298 23B8A700 		sd	a0,16(a5)
 472              	.L34:
GAS LISTING /tmp/ccsK2KH6.s 			page 14


 156:src/memory_allocator.cpp ****         temp->next = current;
 473              		.loc 1 156 9 is_stmt 1
 156:src/memory_allocator.cpp ****         temp->next = current;
 474              		.loc 1 156 20 is_stmt 0
 475 029c 23B4A400 		sd	a0,8(s1)
 158:src/memory_allocator.cpp ****         tryToJoin(current);
 476              		.loc 1 158 9 is_stmt 1
 158:src/memory_allocator.cpp ****         tryToJoin(current);
 477              		.loc 1 158 18 is_stmt 0
 478 02a0 97000000 		call	_ZN15MemoryAllocator9tryToJoinEP5Block
 478      E7800000 
 479              	.LVL27:
 159:src/memory_allocator.cpp ****         tryToJoin(temp);
 480              		.loc 1 159 9 is_stmt 1
 159:src/memory_allocator.cpp ****         tryToJoin(temp);
 481              		.loc 1 159 18 is_stmt 0
 482 02a8 13850400 		mv	a0,s1
 483 02ac 97000000 		call	_ZN15MemoryAllocator9tryToJoinEP5Block
 483      E7800000 
 484              	.LVL28:
 485              	.LBE15:
 486              	.LBE14:
 487              	.LBE18:
 162:src/memory_allocator.cpp ****     return 0;
 488              		.loc 1 162 12
 489 02b4 13050000 		li	a0,0
 490              	.LVL29:
 491              	.L28:
 163:src/memory_allocator.cpp **** }
 492              		.loc 1 163 1
 493 02b8 83308101 		ld	ra,24(sp)
 494              		.cfi_restore 1
 495 02bc 03340101 		ld	s0,16(sp)
 496              		.cfi_restore 8
 497              		.cfi_def_cfa 2, 32
 498 02c0 83348100 		ld	s1,8(sp)
 499              		.cfi_restore 9
 500 02c4 13010102 		addi	sp,sp,32
 501              		.cfi_def_cfa_offset 0
 502 02c8 67800000 		jr	ra
 503              	.LVL30:
 504              	.L43:
 120:src/memory_allocator.cpp ****         usedMemHead = usedMemHead->next;
 505              		.loc 1 120 9 is_stmt 1
 120:src/memory_allocator.cpp ****         usedMemHead = usedMemHead->next;
 506              		.loc 1 120 36 is_stmt 0
 507 02cc 83B78700 		ld	a5,8(a5)
 120:src/memory_allocator.cpp ****         usedMemHead = usedMemHead->next;
 508              		.loc 1 120 21
 509 02d0 97060000 		sd	a5,.LANCHOR0+8,a3
 509      23B0F600 
 121:src/memory_allocator.cpp ****         if (usedMemHead) usedMemHead->prev = nullptr;
 510              		.loc 1 121 9 is_stmt 1
 511 02d8 E38A07F6 		beqz	a5,.L30
 121:src/memory_allocator.cpp ****         if (usedMemHead) usedMemHead->prev = nullptr;
 512              		.loc 1 121 26 discriminator 1
 121:src/memory_allocator.cpp ****         if (usedMemHead) usedMemHead->prev = nullptr;
GAS LISTING /tmp/ccsK2KH6.s 			page 15


 513              		.loc 1 121 44 is_stmt 0 discriminator 1
 514 02dc 23B80700 		sd	zero,16(a5)
 515 02e0 6FF0DFF6 		j	.L30
 516              	.L44:
 517              	.LBB19:
 134:src/memory_allocator.cpp ****         freeMemHead = current;
 518              		.loc 1 134 9 is_stmt 1
 134:src/memory_allocator.cpp ****         freeMemHead = current;
 519              		.loc 1 134 21 is_stmt 0
 520 02e4 97070000 		sd	a0,.LANCHOR0,a5
 520      23B0A700 
 521              	.LBE19:
 162:src/memory_allocator.cpp ****     return 0;
 522              		.loc 1 162 12
 523 02ec 13050000 		li	a0,0
 524              	.LVL31:
 525              	.LBB20:
 526 02f0 67800000 		ret
 527              	.LVL32:
 528              	.L45:
 529              		.cfi_def_cfa_register 8
 530              		.cfi_offset 1, -8
 531              		.cfi_offset 8, -16
 532              		.cfi_offset 9, -24
 533              	.LBB16:
 136:src/memory_allocator.cpp ****         current->next = freeMemHead;
 534              		.loc 1 136 9 is_stmt 1
 136:src/memory_allocator.cpp ****         current->next = freeMemHead;
 535              		.loc 1 136 23 is_stmt 0
 536 02f4 2338F7FE 		sd	a5,-16(a4)
 137:src/memory_allocator.cpp ****         freeMemHead->prev = current;
 537              		.loc 1 137 9 is_stmt 1
 137:src/memory_allocator.cpp ****         freeMemHead->prev = current;
 538              		.loc 1 137 27 is_stmt 0
 539 02f8 23B8A700 		sd	a0,16(a5)
 138:src/memory_allocator.cpp ****         freeMemHead = current;
 540              		.loc 1 138 9 is_stmt 1
 138:src/memory_allocator.cpp ****         freeMemHead = current;
 541              		.loc 1 138 21 is_stmt 0
 542 02fc 97070000 		sd	a0,.LANCHOR0,a5
 542      23B0A700 
 139:src/memory_allocator.cpp ****         tryToJoin(freeMemHead);
 543              		.loc 1 139 9 is_stmt 1
 139:src/memory_allocator.cpp ****         tryToJoin(freeMemHead);
 544              		.loc 1 139 18 is_stmt 0
 545 0304 97000000 		call	_ZN15MemoryAllocator9tryToJoinEP5Block
 545      E7800000 
 546              	.LVL33:
 547              	.LBE16:
 548              	.LBE20:
 162:src/memory_allocator.cpp ****     return 0;
 549              		.loc 1 162 12
 550 030c 13050000 		li	a0,0
 551              	.LBB21:
 552              	.LBB17:
 553 0310 6FF09FFA 		j	.L28
 554              	.LVL34:
GAS LISTING /tmp/ccsK2KH6.s 			page 16


 555              	.L35:
 556              		.cfi_def_cfa_register 2
 557              		.cfi_restore 1
 558              		.cfi_restore 8
 559              		.cfi_restore 9
 560              	.LBE17:
 561              	.LBE21:
 106:src/memory_allocator.cpp ****     if (!usedMemHead) return -1;
 562              		.loc 1 106 31
 563 0314 1305F0FF 		li	a0,-1
 564              	.LVL35:
 565 0318 67800000 		ret
 566              	.LVL36:
 567              	.L36:
 108:src/memory_allocator.cpp ****     if (!ptr) return -2;
 568              		.loc 1 108 23
 569 031c 1305E0FF 		li	a0,-2
 570              	.LVL37:
 571 0320 67800000 		ret
 572              	.LVL38:
 573              	.L37:
 111:src/memory_allocator.cpp ****         return -3;
 574              		.loc 1 111 17
 575 0324 1305D0FF 		li	a0,-3
 576              	.LVL39:
 577 0328 67800000 		ret
 578              	.LVL40:
 579              	.L38:
 580 032c 1305D0FF 		li	a0,-3
 581              	.LVL41:
 582 0330 67800000 		ret
 583              	.LVL42:
 584              	.L39:
 114:src/memory_allocator.cpp ****         return -4;
 585              		.loc 1 114 17
 586 0334 1305C0FF 		li	a0,-4
 587              	.LVL43:
 163:src/memory_allocator.cpp **** }
 588              		.loc 1 163 1
 589 0338 67800000 		ret
 590              		.cfi_endproc
 591              	.LFE5:
 593              		.globl	_ZN15MemoryAllocator11usedMemHeadE
 594              		.globl	_ZN15MemoryAllocator11freeMemHeadE
 595              		.bss
 596              		.align	3
 597              		.set	.LANCHOR0,. + 0
 600              	_ZN15MemoryAllocator11freeMemHeadE:
 601 0000 00000000 		.zero	8
 601      00000000 
 604              	_ZN15MemoryAllocator11usedMemHeadE:
 605 0008 00000000 		.zero	8
 605      00000000 
 606              		.text
 607              	.Letext0:
 608              		.file 2 "src/../h/../lib/hw.h"
 609              		.file 3 "src/../h/memory_allocator.hpp"
GAS LISTING /tmp/ccsK2KH6.s 			page 17


GAS LISTING /tmp/ccsK2KH6.s 			page 18


DEFINED SYMBOLS
                            *ABS*:0000000000000000 memory_allocator.cpp
     /tmp/ccsK2KH6.s:9      .text:0000000000000000 _ZN15MemoryAllocator4initEv
     /tmp/ccsK2KH6.s:13     .text:0000000000000000 .L0 
     /tmp/ccsK2KH6.s:14     .text:0000000000000000 .L0 
     /tmp/ccsK2KH6.s:15     .text:0000000000000004 .L0 
     /tmp/ccsK2KH6.s:17     .text:0000000000000008 .L0 
     /tmp/ccsK2KH6.s:19     .text:000000000000000c .L0 
     /tmp/ccsK2KH6.s:21     .text:000000000000000c .L0 
     /tmp/ccsK2KH6.s:22     .text:000000000000000c .L0 
     /tmp/ccsK2KH6.s:27     .text:0000000000000024 .L0 
     /tmp/ccsK2KH6.s:28     .text:0000000000000024 .L0 
     /tmp/ccsK2KH6.s:31     .text:0000000000000030 .L0 
     /tmp/ccsK2KH6.s:33     .text:0000000000000034 .L0 
     /tmp/ccsK2KH6.s:35     .text:0000000000000038 .L0 
     /tmp/ccsK2KH6.s:37     .text:000000000000003c .L0 
     /tmp/ccsK2KH6.s:38     .text:000000000000003c .L0 
     /tmp/ccsK2KH6.s:40     .text:0000000000000040 .L0 
     /tmp/ccsK2KH6.s:42     .text:0000000000000044 .L0 
     /tmp/ccsK2KH6.s:43     .text:0000000000000044 .L0 
     /tmp/ccsK2KH6.s:45     .text:0000000000000048 .L0 
     /tmp/ccsK2KH6.s:46     .text:0000000000000048 .L0 
     /tmp/ccsK2KH6.s:48     .text:000000000000004c .L0 
     /tmp/ccsK2KH6.s:49     .text:0000000000000050 .L0 
     /tmp/ccsK2KH6.s:50     .text:0000000000000050 .L0 
     /tmp/ccsK2KH6.s:52     .text:0000000000000054 .L0 
     /tmp/ccsK2KH6.s:54     .text:0000000000000058 .L0 
     /tmp/ccsK2KH6.s:60     .text:0000000000000058 _ZN15MemoryAllocator9mem_allocEm
     /tmp/ccsK2KH6.s:63     .text:0000000000000058 .L0 
     /tmp/ccsK2KH6.s:65     .text:0000000000000058 .L0 
     /tmp/ccsK2KH6.s:66     .text:000000000000005c .L0 
     /tmp/ccsK2KH6.s:68     .text:0000000000000060 .L0 
     /tmp/ccsK2KH6.s:70     .text:0000000000000064 .L0 
     /tmp/ccsK2KH6.s:72     .text:0000000000000064 .L0 
     /tmp/ccsK2KH6.s:74     .text:0000000000000068 .L0 
     /tmp/ccsK2KH6.s:75     .text:0000000000000068 .L0 
     /tmp/ccsK2KH6.s:78     .text:000000000000006c .L0 
     /tmp/ccsK2KH6.s:80     .text:0000000000000070 .L0 
     /tmp/ccsK2KH6.s:82     .text:0000000000000074 .L0 
     /tmp/ccsK2KH6.s:84     .text:0000000000000078 .L0 
     /tmp/ccsK2KH6.s:88     .text:000000000000007c .L0 
     /tmp/ccsK2KH6.s:90     .text:000000000000007c .L0 
     /tmp/ccsK2KH6.s:91     .text:000000000000007c .L0 
     /tmp/ccsK2KH6.s:95     .text:0000000000000084 .L0 
     /tmp/ccsK2KH6.s:97     .text:0000000000000088 .L0 
     /tmp/ccsK2KH6.s:98     .text:0000000000000088 .L0 
     /tmp/ccsK2KH6.s:100    .text:000000000000008c .L0 
     /tmp/ccsK2KH6.s:102    .text:0000000000000090 .L0 
     /tmp/ccsK2KH6.s:103    .text:0000000000000090 .L0 
     /tmp/ccsK2KH6.s:106    .text:0000000000000094 .L0 
     /tmp/ccsK2KH6.s:111    .text:0000000000000098 .L0 
     /tmp/ccsK2KH6.s:116    .text:00000000000000a0 .L0 
     /tmp/ccsK2KH6.s:119    .text:00000000000000a4 .L0 
     /tmp/ccsK2KH6.s:121    .text:00000000000000a4 .L0 
     /tmp/ccsK2KH6.s:122    .text:00000000000000a4 .L0 
     /tmp/ccsK2KH6.s:124    .text:00000000000000a8 .L0 
     /tmp/ccsK2KH6.s:127    .text:00000000000000ac .L0 
GAS LISTING /tmp/ccsK2KH6.s 			page 19


     /tmp/ccsK2KH6.s:128    .text:00000000000000ac .L0 
     /tmp/ccsK2KH6.s:130    .text:00000000000000b0 .L0 
     /tmp/ccsK2KH6.s:133    .text:00000000000000b4 .L0 
     /tmp/ccsK2KH6.s:134    .text:00000000000000b4 .L0 
     /tmp/ccsK2KH6.s:136    .text:00000000000000b8 .L0 
     /tmp/ccsK2KH6.s:138    .text:00000000000000bc .L0 
     /tmp/ccsK2KH6.s:139    .text:00000000000000bc .L0 
     /tmp/ccsK2KH6.s:141    .text:00000000000000c0 .L0 
     /tmp/ccsK2KH6.s:143    .text:00000000000000c4 .L0 
     /tmp/ccsK2KH6.s:144    .text:00000000000000c4 .L0 
     /tmp/ccsK2KH6.s:146    .text:00000000000000c8 .L0 
     /tmp/ccsK2KH6.s:148    .text:00000000000000cc .L0 
     /tmp/ccsK2KH6.s:150    .text:00000000000000d0 .L0 
     /tmp/ccsK2KH6.s:151    .text:00000000000000d0 .L0 
     /tmp/ccsK2KH6.s:154    .text:00000000000000d4 .L0 
     /tmp/ccsK2KH6.s:155    .text:00000000000000d4 .L0 
     /tmp/ccsK2KH6.s:157    .text:00000000000000d8 .L0 
     /tmp/ccsK2KH6.s:159    .text:00000000000000dc .L0 
     /tmp/ccsK2KH6.s:160    .text:00000000000000dc .L0 
     /tmp/ccsK2KH6.s:166    .text:00000000000000e0 .L0 
     /tmp/ccsK2KH6.s:167    .text:00000000000000e0 .L0 
     /tmp/ccsK2KH6.s:169    .text:00000000000000e4 .L0 
     /tmp/ccsK2KH6.s:170    .text:00000000000000e4 .L0 
     /tmp/ccsK2KH6.s:172    .text:00000000000000e8 .L0 
     /tmp/ccsK2KH6.s:173    .text:00000000000000e8 .L0 
     /tmp/ccsK2KH6.s:176    .text:00000000000000ec .L0 
     /tmp/ccsK2KH6.s:177    .text:00000000000000ec .L0 
     /tmp/ccsK2KH6.s:180    .text:00000000000000f4 .L0 
     /tmp/ccsK2KH6.s:185    .text:00000000000000f8 .L0 
     /tmp/ccsK2KH6.s:187    .text:00000000000000fc .L0 
     /tmp/ccsK2KH6.s:188    .text:00000000000000fc .L0 
     /tmp/ccsK2KH6.s:191    .text:0000000000000100 .L0 
     /tmp/ccsK2KH6.s:192    .text:0000000000000100 .L0 
     /tmp/ccsK2KH6.s:194    .text:0000000000000104 .L0 
     /tmp/ccsK2KH6.s:195    .text:0000000000000104 .L0 
     /tmp/ccsK2KH6.s:200    .text:000000000000010c .L0 
     /tmp/ccsK2KH6.s:201    .text:000000000000010c .L0 
     /tmp/ccsK2KH6.s:205    .text:0000000000000110 .L0 
     /tmp/ccsK2KH6.s:206    .text:0000000000000114 .L0 
     /tmp/ccsK2KH6.s:207    .text:0000000000000114 .L0 
     /tmp/ccsK2KH6.s:208    .text:0000000000000114 .L0 
     /tmp/ccsK2KH6.s:210    .text:0000000000000118 .L0 
     /tmp/ccsK2KH6.s:214    .text:000000000000011c .L0 
     /tmp/ccsK2KH6.s:218    .text:000000000000011c .L0 
     /tmp/ccsK2KH6.s:219    .text:000000000000011c .L0 
     /tmp/ccsK2KH6.s:225    .text:0000000000000128 .L0 
     /tmp/ccsK2KH6.s:226    .text:0000000000000128 .L0 
     /tmp/ccsK2KH6.s:228    .text:000000000000012c .L0 
     /tmp/ccsK2KH6.s:230    .text:0000000000000130 .L0 
     /tmp/ccsK2KH6.s:231    .text:0000000000000130 .L0 
     /tmp/ccsK2KH6.s:233    .text:0000000000000134 .L0 
     /tmp/ccsK2KH6.s:236    .text:0000000000000138 .L0 
     /tmp/ccsK2KH6.s:237    .text:0000000000000138 .L0 
     /tmp/ccsK2KH6.s:239    .text:000000000000013c .L0 
     /tmp/ccsK2KH6.s:241    .text:0000000000000140 .L0 
     /tmp/ccsK2KH6.s:242    .text:0000000000000140 .L0 
     /tmp/ccsK2KH6.s:244    .text:0000000000000144 .L0 
GAS LISTING /tmp/ccsK2KH6.s 			page 20


     /tmp/ccsK2KH6.s:248    .text:000000000000014c .L0 
     /tmp/ccsK2KH6.s:249    .text:000000000000014c .L0 
     /tmp/ccsK2KH6.s:251    .text:0000000000000150 .L0 
     /tmp/ccsK2KH6.s:258    .text:000000000000015c .L0 
     /tmp/ccsK2KH6.s:259    .text:000000000000015c .L0 
     /tmp/ccsK2KH6.s:267    .text:0000000000000168 .L0 
     /tmp/ccsK2KH6.s:268    .text:0000000000000168 .L0 
     /tmp/ccsK2KH6.s:273    .text:0000000000000174 .L0 
     /tmp/ccsK2KH6.s:276    .text:0000000000000178 .L0 
     /tmp/ccsK2KH6.s:277    .text:0000000000000178 .L0 
     /tmp/ccsK2KH6.s:279    .text:000000000000017c .L0 
     /tmp/ccsK2KH6.s:280    .text:000000000000017c .L0 
     /tmp/ccsK2KH6.s:282    .text:0000000000000180 .L0 
     /tmp/ccsK2KH6.s:283    .text:0000000000000180 .L0 
     /tmp/ccsK2KH6.s:285    .text:0000000000000184 .L0 
     /tmp/ccsK2KH6.s:287    .text:0000000000000188 .L0 
     /tmp/ccsK2KH6.s:288    .text:0000000000000188 .L0 
     /tmp/ccsK2KH6.s:292    .text:000000000000018c .L0 
     /tmp/ccsK2KH6.s:293    .text:000000000000018c .L0 
     /tmp/ccsK2KH6.s:301    .text:0000000000000194 .L0 
     /tmp/ccsK2KH6.s:304    .text:000000000000019c .L0 
     /tmp/ccsK2KH6.s:310    .text:000000000000019c _ZN15MemoryAllocator9tryToJoinEP5Block
     /tmp/ccsK2KH6.s:313    .text:000000000000019c .L0 
     /tmp/ccsK2KH6.s:315    .text:000000000000019c .L0 
     /tmp/ccsK2KH6.s:316    .text:00000000000001a0 .L0 
     /tmp/ccsK2KH6.s:318    .text:00000000000001a4 .L0 
     /tmp/ccsK2KH6.s:320    .text:00000000000001a8 .L0 
     /tmp/ccsK2KH6.s:322    .text:00000000000001a8 .L0 
     /tmp/ccsK2KH6.s:323    .text:00000000000001a8 .L0 
     /tmp/ccsK2KH6.s:325    .text:00000000000001ac .L0 
     /tmp/ccsK2KH6.s:327    .text:00000000000001b0 .L0 
     /tmp/ccsK2KH6.s:328    .text:00000000000001b0 .L0 
     /tmp/ccsK2KH6.s:330    .text:00000000000001b4 .L0 
     /tmp/ccsK2KH6.s:332    .text:00000000000001b8 .L0 
     /tmp/ccsK2KH6.s:335    .text:00000000000001c0 .L0 
     /tmp/ccsK2KH6.s:338    .text:00000000000001c4 .L0 
     /tmp/ccsK2KH6.s:339    .text:00000000000001c8 .L0 
     /tmp/ccsK2KH6.s:340    .text:00000000000001c8 .L0 
     /tmp/ccsK2KH6.s:341    .text:00000000000001c8 .L0 
     /tmp/ccsK2KH6.s:343    .text:00000000000001cc .L0 
     /tmp/ccsK2KH6.s:346    .text:00000000000001d0 .L0 
     /tmp/ccsK2KH6.s:348    .text:00000000000001d0 .L0 
     /tmp/ccsK2KH6.s:349    .text:00000000000001d0 .L0 
     /tmp/ccsK2KH6.s:351    .text:00000000000001d4 .L0 
     /tmp/ccsK2KH6.s:355    .text:00000000000001e0 .L0 
     /tmp/ccsK2KH6.s:356    .text:00000000000001e0 .L0 
     /tmp/ccsK2KH6.s:358    .text:00000000000001e4 .L0 
     /tmp/ccsK2KH6.s:360    .text:00000000000001e8 .L0 
     /tmp/ccsK2KH6.s:362    .text:00000000000001ec .L0 
     /tmp/ccsK2KH6.s:363    .text:00000000000001ec .L0 
     /tmp/ccsK2KH6.s:365    .text:00000000000001f0 .L0 
     /tmp/ccsK2KH6.s:366    .text:00000000000001f4 .L0 
     /tmp/ccsK2KH6.s:372    .text:00000000000001f4 _ZN15MemoryAllocator8mem_freeEPv
     /tmp/ccsK2KH6.s:375    .text:00000000000001f4 .L0 
     /tmp/ccsK2KH6.s:377    .text:00000000000001f4 .L0 
     /tmp/ccsK2KH6.s:378    .text:00000000000001f4 .L0 
     /tmp/ccsK2KH6.s:379    .text:00000000000001f4 .L0 
GAS LISTING /tmp/ccsK2KH6.s 			page 21


     /tmp/ccsK2KH6.s:381    .text:00000000000001fc .L0 
     /tmp/ccsK2KH6.s:384    .text:0000000000000204 .L0 
     /tmp/ccsK2KH6.s:386    .text:0000000000000208 .L0 
     /tmp/ccsK2KH6.s:387    .text:0000000000000208 .L0 
     /tmp/ccsK2KH6.s:390    .text:0000000000000214 .L0 
     /tmp/ccsK2KH6.s:392    .text:0000000000000218 .L0 
     /tmp/ccsK2KH6.s:395    .text:0000000000000224 .L0 
     /tmp/ccsK2KH6.s:397    .text:0000000000000228 .L0 
     /tmp/ccsK2KH6.s:399    .text:000000000000022c .L0 
     /tmp/ccsK2KH6.s:400    .text:000000000000022c .L0 
     /tmp/ccsK2KH6.s:403    .text:0000000000000230 .L0 
     /tmp/ccsK2KH6.s:405    .text:0000000000000234 .L0 
     /tmp/ccsK2KH6.s:406    .text:0000000000000234 .L0 
     /tmp/ccsK2KH6.s:408    .text:0000000000000238 .L0 
     /tmp/ccsK2KH6.s:410    .text:000000000000023c .L0 
     /tmp/ccsK2KH6.s:412    .text:0000000000000240 .L0 
     /tmp/ccsK2KH6.s:414    .text:0000000000000244 .L0 
     /tmp/ccsK2KH6.s:415    .text:0000000000000244 .L0 
     /tmp/ccsK2KH6.s:417    .text:0000000000000248 .L0 
     /tmp/ccsK2KH6.s:420    .text:000000000000024c .L0 
     /tmp/ccsK2KH6.s:421    .text:000000000000024c .L0 
     /tmp/ccsK2KH6.s:423    .text:0000000000000250 .L0 
     /tmp/ccsK2KH6.s:424    .text:0000000000000250 .L0 
     /tmp/ccsK2KH6.s:427    .text:0000000000000254 .L0 
     /tmp/ccsK2KH6.s:428    .text:0000000000000254 .L0 
     /tmp/ccsK2KH6.s:430    .text:000000000000025c .L0 
     /tmp/ccsK2KH6.s:433    .text:0000000000000260 .L0 
     /tmp/ccsK2KH6.s:434    .text:0000000000000264 .L0 
     /tmp/ccsK2KH6.s:438    .text:0000000000000270 .L0 
     /tmp/ccsK2KH6.s:439    .text:0000000000000270 .L0 
     /tmp/ccsK2KH6.s:440    .text:0000000000000270 .L0 
     /tmp/ccsK2KH6.s:442    .text:0000000000000274 .L0 
     /tmp/ccsK2KH6.s:446    .text:0000000000000274 .L0 
     /tmp/ccsK2KH6.s:451    .text:0000000000000278 .L0 
     /tmp/ccsK2KH6.s:452    .text:0000000000000278 .L0 
     /tmp/ccsK2KH6.s:457    .text:0000000000000284 .L0 
     /tmp/ccsK2KH6.s:460    .text:0000000000000288 .L0 
     /tmp/ccsK2KH6.s:461    .text:0000000000000288 .L0 
     /tmp/ccsK2KH6.s:463    .text:000000000000028c .L0 
     /tmp/ccsK2KH6.s:464    .text:000000000000028c .L0 
     /tmp/ccsK2KH6.s:466    .text:0000000000000290 .L0 
     /tmp/ccsK2KH6.s:468    .text:0000000000000294 .L0 
     /tmp/ccsK2KH6.s:470    .text:0000000000000298 .L0 
     /tmp/ccsK2KH6.s:471    .text:0000000000000298 .L0 
     /tmp/ccsK2KH6.s:474    .text:000000000000029c .L0 
     /tmp/ccsK2KH6.s:475    .text:000000000000029c .L0 
     /tmp/ccsK2KH6.s:477    .text:00000000000002a0 .L0 
     /tmp/ccsK2KH6.s:478    .text:00000000000002a0 .L0 
     /tmp/ccsK2KH6.s:481    .text:00000000000002a8 .L0 
     /tmp/ccsK2KH6.s:482    .text:00000000000002a8 .L0 
     /tmp/ccsK2KH6.s:489    .text:00000000000002b4 .L0 
     /tmp/ccsK2KH6.s:493    .text:00000000000002b8 .L0 
     /tmp/ccsK2KH6.s:494    .text:00000000000002bc .L0 
     /tmp/ccsK2KH6.s:496    .text:00000000000002c0 .L0 
     /tmp/ccsK2KH6.s:497    .text:00000000000002c0 .L0 
     /tmp/ccsK2KH6.s:499    .text:00000000000002c4 .L0 
     /tmp/ccsK2KH6.s:501    .text:00000000000002c8 .L0 
GAS LISTING /tmp/ccsK2KH6.s 			page 22


     /tmp/ccsK2KH6.s:506    .text:00000000000002cc .L0 
     /tmp/ccsK2KH6.s:507    .text:00000000000002cc .L0 
     /tmp/ccsK2KH6.s:509    .text:00000000000002d0 .L0 
     /tmp/ccsK2KH6.s:511    .text:00000000000002d8 .L0 
     /tmp/ccsK2KH6.s:513    .text:00000000000002dc .L0 
     /tmp/ccsK2KH6.s:514    .text:00000000000002dc .L0 
     /tmp/ccsK2KH6.s:519    .text:00000000000002e4 .L0 
     /tmp/ccsK2KH6.s:520    .text:00000000000002e4 .L0 
     /tmp/ccsK2KH6.s:523    .text:00000000000002ec .L0 
     /tmp/ccsK2KH6.s:529    .text:00000000000002f4 .L0 
     /tmp/ccsK2KH6.s:530    .text:00000000000002f4 .L0 
     /tmp/ccsK2KH6.s:531    .text:00000000000002f4 .L0 
     /tmp/ccsK2KH6.s:532    .text:00000000000002f4 .L0 
     /tmp/ccsK2KH6.s:535    .text:00000000000002f4 .L0 
     /tmp/ccsK2KH6.s:536    .text:00000000000002f4 .L0 
     /tmp/ccsK2KH6.s:538    .text:00000000000002f8 .L0 
     /tmp/ccsK2KH6.s:539    .text:00000000000002f8 .L0 
     /tmp/ccsK2KH6.s:541    .text:00000000000002fc .L0 
     /tmp/ccsK2KH6.s:542    .text:00000000000002fc .L0 
     /tmp/ccsK2KH6.s:544    .text:0000000000000304 .L0 
     /tmp/ccsK2KH6.s:545    .text:0000000000000304 .L0 
     /tmp/ccsK2KH6.s:550    .text:000000000000030c .L0 
     /tmp/ccsK2KH6.s:556    .text:0000000000000314 .L0 
     /tmp/ccsK2KH6.s:557    .text:0000000000000314 .L0 
     /tmp/ccsK2KH6.s:558    .text:0000000000000314 .L0 
     /tmp/ccsK2KH6.s:559    .text:0000000000000314 .L0 
     /tmp/ccsK2KH6.s:563    .text:0000000000000314 .L0 
     /tmp/ccsK2KH6.s:569    .text:000000000000031c .L0 
     /tmp/ccsK2KH6.s:575    .text:0000000000000324 .L0 
     /tmp/ccsK2KH6.s:586    .text:0000000000000334 .L0 
     /tmp/ccsK2KH6.s:589    .text:0000000000000338 .L0 
     /tmp/ccsK2KH6.s:590    .text:000000000000033c .L0 
     /tmp/ccsK2KH6.s:604    .bss:0000000000000008 _ZN15MemoryAllocator11usedMemHeadE
     /tmp/ccsK2KH6.s:600    .bss:0000000000000000 _ZN15MemoryAllocator11freeMemHeadE
     /tmp/ccsK2KH6.s:597    .bss:0000000000000000 .LANCHOR0
     /tmp/ccsK2KH6.s:610    .text:000000000000033c .L0 
     /tmp/ccsK2KH6.s:22     .text:000000000000000c .L0 
     /tmp/ccsK2KH6.s:24     .text:0000000000000018 .L0 
     /tmp/ccsK2KH6.s:28     .text:0000000000000024 .L0 
     /tmp/ccsK2KH6.s:91     .text:000000000000007c .L0 
     /tmp/ccsK2KH6.s:177    .text:00000000000000ec .L0 
     /tmp/ccsK2KH6.s:195    .text:0000000000000104 .L0 
     /tmp/ccsK2KH6.s:219    .text:000000000000011c .L0 
     /tmp/ccsK2KH6.s:251    .text:0000000000000150 .L0 
     /tmp/ccsK2KH6.s:259    .text:000000000000015c .L0 
     /tmp/ccsK2KH6.s:379    .text:00000000000001f4 .L0 
     /tmp/ccsK2KH6.s:387    .text:0000000000000208 .L0 
     /tmp/ccsK2KH6.s:392    .text:0000000000000218 .L0 
     /tmp/ccsK2KH6.s:428    .text:0000000000000254 .L0 
     /tmp/ccsK2KH6.s:509    .text:00000000000002d0 .L0 
     /tmp/ccsK2KH6.s:520    .text:00000000000002e4 .L0 
     /tmp/ccsK2KH6.s:542    .text:00000000000002fc .L0 
     /tmp/ccsK2KH6.s:296    .text:0000000000000194 .L20
     /tmp/ccsK2KH6.s:108    .text:0000000000000098 .L5
     /tmp/ccsK2KH6.s:114    .text:00000000000000a0 .L7
     /tmp/ccsK2KH6.s:93     .text:0000000000000084 .L8
     /tmp/ccsK2KH6.s:85     .text:000000000000007c .L6
GAS LISTING /tmp/ccsK2KH6.s 			page 23


     /tmp/ccsK2KH6.s:203    .text:0000000000000110 .L3
     /tmp/ccsK2KH6.s:222    .text:0000000000000128 .L9
     /tmp/ccsK2KH6.s:213    .text:000000000000011c .L10
     /tmp/ccsK2KH6.s:162    .text:00000000000000e0 .L12
     /tmp/ccsK2KH6.s:254    .text:000000000000015c .L22
     /tmp/ccsK2KH6.s:263    .text:0000000000000168 .L17
     /tmp/ccsK2KH6.s:152    .text:00000000000000d4 .L11
     /tmp/ccsK2KH6.s:246    .text:000000000000014c .L13
     /tmp/ccsK2KH6.s:234    .text:0000000000000138 .L14
     /tmp/ccsK2KH6.s:196    .text:000000000000010c .L16
     /tmp/ccsK2KH6.s:274    .text:0000000000000178 .L18
     /tmp/ccsK2KH6.s:290    .text:000000000000018c .L19
     /tmp/ccsK2KH6.s:336    .text:00000000000001c4 .L23
     /tmp/ccsK2KH6.s:345    .text:00000000000001d0 .L26
     /tmp/ccsK2KH6.s:555    .text:0000000000000314 .L35
     /tmp/ccsK2KH6.s:567    .text:000000000000031c .L36
     /tmp/ccsK2KH6.s:573    .text:0000000000000324 .L37
     /tmp/ccsK2KH6.s:579    .text:000000000000032c .L38
     /tmp/ccsK2KH6.s:584    .text:0000000000000334 .L39
     /tmp/ccsK2KH6.s:504    .text:00000000000002cc .L43
     /tmp/ccsK2KH6.s:418    .text:000000000000024c .L30
     /tmp/ccsK2KH6.s:516    .text:00000000000002e4 .L44
     /tmp/ccsK2KH6.s:528    .text:00000000000002f4 .L45
     /tmp/ccsK2KH6.s:458    .text:0000000000000288 .L33
     /tmp/ccsK2KH6.s:447    .text:0000000000000278 .L32
     /tmp/ccsK2KH6.s:472    .text:000000000000029c .L34
     /tmp/ccsK2KH6.s:491    .text:00000000000002b8 .L28
     /tmp/ccsK2KH6.s:1076   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccsK2KH6.s:1985   .debug_str:00000000000001ae .LASF37
     /tmp/ccsK2KH6.s:2019   .debug_str:0000000000000365 .LASF38
     /tmp/ccsK2KH6.s:1999   .debug_str:00000000000002d4 .LASF39
     /tmp/ccsK2KH6.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccsK2KH6.s:607    .text:000000000000033c .Letext0
     /tmp/ccsK2KH6.s:1933   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccsK2KH6.s:1991   .debug_str:0000000000000295 .LASF0
     /tmp/ccsK2KH6.s:1977   .debug_str:000000000000017c .LASF1
     /tmp/ccsK2KH6.s:1969   .debug_str:000000000000013b .LASF2
     /tmp/ccsK2KH6.s:1949   .debug_str:0000000000000065 .LASF4
     /tmp/ccsK2KH6.s:1973   .debug_str:0000000000000165 .LASF3
     /tmp/ccsK2KH6.s:1939   .debug_str:0000000000000023 .LASF5
     /tmp/ccsK2KH6.s:1935   .debug_str:0000000000000000 .LASF6
     /tmp/ccsK2KH6.s:1961   .debug_str:00000000000000f2 .LASF7
     /tmp/ccsK2KH6.s:1995   .debug_str:00000000000002ae .LASF8
     /tmp/ccsK2KH6.s:1947   .debug_str:0000000000000057 .LASF9
     /tmp/ccsK2KH6.s:2029   .debug_str:00000000000003b5 .LASF10
     /tmp/ccsK2KH6.s:1965   .debug_str:000000000000010b .LASF11
     /tmp/ccsK2KH6.s:2015   .debug_str:000000000000034b .LASF12
     /tmp/ccsK2KH6.s:2001   .debug_str:00000000000002ed .LASF13
     /tmp/ccsK2KH6.s:1981   .debug_str:000000000000019c .LASF14
     /tmp/ccsK2KH6.s:1957   .debug_str:00000000000000b9 .LASF15
     /tmp/ccsK2KH6.s:1997   .debug_str:00000000000002be .LASF16
     /tmp/ccsK2KH6.s:1983   .debug_str:00000000000001a8 .LASF40
     /tmp/ccsK2KH6.s:2025   .debug_str:00000000000003ab .LASF17
     /tmp/ccsK2KH6.s:1941   .debug_str:000000000000002a .LASF18
     /tmp/ccsK2KH6.s:2027   .debug_str:00000000000003b0 .LASF19
     /tmp/ccsK2KH6.s:1937   .debug_str:0000000000000013 .LASF22
     /tmp/ccsK2KH6.s:1993   .debug_str:00000000000002a2 .LASF20
GAS LISTING /tmp/ccsK2KH6.s 			page 24


     /tmp/ccsK2KH6.s:1943   .debug_str:000000000000002f .LASF21
     /tmp/ccsK2KH6.s:1987   .debug_str:0000000000000272 .LASF41
     /tmp/ccsK2KH6.s:1953   .debug_str:0000000000000076 .LASF24
     /tmp/ccsK2KH6.s:2017   .debug_str:000000000000035b .LASF42
     /tmp/ccsK2KH6.s:1971   .debug_str:0000000000000149 .LASF43
     /tmp/ccsK2KH6.s:2013   .debug_str:0000000000000341 .LASF44
     /tmp/ccsK2KH6.s:1955   .debug_str:0000000000000092 .LASF45
     /tmp/ccsK2KH6.s:2021   .debug_str:000000000000037e .LASF23
     /tmp/ccsK2KH6.s:2011   .debug_str:0000000000000320 .LASF25
     /tmp/ccsK2KH6.s:2003   .debug_str:00000000000002fd .LASF26
     /tmp/ccsK2KH6.s:1967   .debug_str:000000000000011a .LASF27
     /tmp/ccsK2KH6.s:2005   .debug_str:0000000000000306 .LASF46
     /tmp/ccsK2KH6.s:1945   .debug_str:000000000000003b .LASF47
     /tmp/ccsK2KH6.s:2023   .debug_str:0000000000000388 .LASF28
     /tmp/ccsK2KH6.s:1959   .debug_str:00000000000000cf .LASF29
     /tmp/ccsK2KH6.s:311    .text:000000000000019c .LFB6
     /tmp/ccsK2KH6.s:367    .text:00000000000001f4 .LFE6
     /tmp/ccsK2KH6.s:1963   .debug_str:0000000000000105 .LASF30
     /tmp/ccsK2KH6.s:373    .text:00000000000001f4 .LFB5
     /tmp/ccsK2KH6.s:591    .text:000000000000033c .LFE5
     /tmp/ccsK2KH6.s:1666   .debug_loc:0000000000000000 .LLST7
     /tmp/ccsK2KH6.s:2009   .debug_str:0000000000000318 .LASF31
     /tmp/ccsK2KH6.s:1738   .debug_loc:0000000000000136 .LLST8
     /tmp/ccsK2KH6.s:449    .text:0000000000000278 .LBB15
     /tmp/ccsK2KH6.s:485    .text:00000000000002b4 .LBE15
     /tmp/ccsK2KH6.s:1975   .debug_str:0000000000000177 .LASF32
     /tmp/ccsK2KH6.s:1776   .debug_loc:00000000000001ca .LLST9
     /tmp/ccsK2KH6.s:479    .text:00000000000002a8 .LVL27
     /tmp/ccsK2KH6.s:484    .text:00000000000002b4 .LVL28
     /tmp/ccsK2KH6.s:546    .text:000000000000030c .LVL33
     /tmp/ccsK2KH6.s:61     .text:0000000000000058 .LFB4
     /tmp/ccsK2KH6.s:305    .text:000000000000019c .LFE4
     /tmp/ccsK2KH6.s:1787   .debug_loc:0000000000000200 .LLST0
     /tmp/ccsK2KH6.s:2007   .debug_str:000000000000030b .LASF33
     /tmp/ccsK2KH6.s:1818   .debug_loc:0000000000000277 .LLST1
     /tmp/ccsK2KH6.s:1951   .debug_str:000000000000006c .LASF34
     /tmp/ccsK2KH6.s:1848   .debug_loc:00000000000002fc .LLST2
     /tmp/ccsK2KH6.s:1989   .debug_str:000000000000028b .LASF35
     /tmp/ccsK2KH6.s:1864   .debug_loc:0000000000000346 .LLST3
     /tmp/ccsK2KH6.s:89     .text:000000000000007c .LBB2
     /tmp/ccsK2KH6.s:109    .text:0000000000000098 .LBE2
     /tmp/ccsK2KH6.s:1875   .debug_loc:000000000000037c .LLST4
     /tmp/ccsK2KH6.s:1925   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccsK2KH6.s:1979   .debug_str:000000000000018f .LASF36
     /tmp/ccsK2KH6.s:1890   .debug_loc:00000000000003c5 .LLST5
     /tmp/ccsK2KH6.s:265    .text:0000000000000168 .LBB8
     /tmp/ccsK2KH6.s:297    .text:0000000000000194 .LBE8
     /tmp/ccsK2KH6.s:1901   .debug_loc:00000000000003fb .LLST6
     /tmp/ccsK2KH6.s:10     .text:0000000000000000 .LFB3
     /tmp/ccsK2KH6.s:55     .text:0000000000000058 .LFE3
     /tmp/ccsK2KH6.s:376    .text:00000000000001f4 .LVL23
     /tmp/ccsK2KH6.s:401    .text:0000000000000230 .LVL24
     /tmp/ccsK2KH6.s:503    .text:00000000000002cc .LVL30
     /tmp/ccsK2KH6.s:554    .text:0000000000000314 .LVL34
     /tmp/ccsK2KH6.s:564    .text:0000000000000318 .LVL35
     /tmp/ccsK2KH6.s:566    .text:000000000000031c .LVL36
     /tmp/ccsK2KH6.s:570    .text:0000000000000320 .LVL37
GAS LISTING /tmp/ccsK2KH6.s 			page 25


     /tmp/ccsK2KH6.s:572    .text:0000000000000324 .LVL38
     /tmp/ccsK2KH6.s:576    .text:0000000000000328 .LVL39
     /tmp/ccsK2KH6.s:578    .text:000000000000032c .LVL40
     /tmp/ccsK2KH6.s:581    .text:0000000000000330 .LVL41
     /tmp/ccsK2KH6.s:583    .text:0000000000000334 .LVL42
     /tmp/ccsK2KH6.s:587    .text:0000000000000338 .LVL43
     /tmp/ccsK2KH6.s:524    .text:00000000000002f0 .LVL31
     /tmp/ccsK2KH6.s:527    .text:00000000000002f4 .LVL32
     /tmp/ccsK2KH6.s:448    .text:0000000000000278 .LVL25
     /tmp/ccsK2KH6.s:454    .text:0000000000000280 .LVL26
     /tmp/ccsK2KH6.s:490    .text:00000000000002b8 .LVL29
     /tmp/ccsK2KH6.s:64     .text:0000000000000058 .LVL0
     /tmp/ccsK2KH6.s:76     .text:000000000000006c .LVL1
     /tmp/ccsK2KH6.s:92     .text:0000000000000084 .LVL3
     /tmp/ccsK2KH6.s:295    .text:0000000000000194 .LVL20
     /tmp/ccsK2KH6.s:302    .text:0000000000000198 .LVL21
     /tmp/ccsK2KH6.s:86     .text:000000000000007c .LVL2
     /tmp/ccsK2KH6.s:107    .text:0000000000000098 .LVL5
     /tmp/ccsK2KH6.s:113    .text:00000000000000a0 .LVL6
     /tmp/ccsK2KH6.s:178    .text:00000000000000f4 .LVL10
     /tmp/ccsK2KH6.s:189    .text:0000000000000100 .LVL11
     /tmp/ccsK2KH6.s:212    .text:000000000000011c .LVL13
     /tmp/ccsK2KH6.s:253    .text:000000000000015c .LVL15
     /tmp/ccsK2KH6.s:260    .text:0000000000000164 .LVL16
     /tmp/ccsK2KH6.s:262    .text:0000000000000168 .LVL17
     /tmp/ccsK2KH6.s:289    .text:000000000000018c .LVL19
     /tmp/ccsK2KH6.s:202    .text:0000000000000110 .LVL12
     /tmp/ccsK2KH6.s:118    .text:00000000000000a4 .LVL7
     /tmp/ccsK2KH6.s:131    .text:00000000000000b4 .LVL8
     /tmp/ccsK2KH6.s:161    .text:00000000000000e0 .LVL9
     /tmp/ccsK2KH6.s:221    .text:0000000000000128 .LVL14
     /tmp/ccsK2KH6.s:270    .text:0000000000000170 .LVL18
     /tmp/ccsK2KH6.s:611    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccsK2KH6.s:125    .text:00000000000000ac .LBB4
     /tmp/ccsK2KH6.s:163    .text:00000000000000e0 .LBE4
     /tmp/ccsK2KH6.s:216    .text:000000000000011c .LBB5
     /tmp/ccsK2KH6.s:223    .text:0000000000000128 .LBE5

UNDEFINED SYMBOLS
HEAP_START_ADDR
HEAP_END_ADDR
